{
    "datas":[
        {
            "key": "n0",
            "type": "text",
            "text": {
                "text_content": "entry"
            }
        },
        {
            "key": "n1",
            "type": "text",
            "text": {
                "text_content": "var keySettings = { \n        \n        // Selecting\n\n        deleteNodes: \"del\", //Nodeの削除\n        selectNodeRight: \"right\",\n        selectNodeLeft: \"left\",\n        selectNodeAbove: \"up\",\n        selectNodeBelow: \"down\",\n        highlightNodesSource: \"s\", //Highlight source node(s)\n        highlightNodesTarget: \"t\", //Highlight target node(s)\n        highlightNodesSourceAndTarget: \"l\",  //Highlight source and target node(s)\n        brushSelecting: \"b\", // selecting node(s) by brush\n        connectDatas: \"c\", //conect nodes\n        undo: \"ctrl+z\", //undo\n        redo: \"ctrl+y\", //redo\n        \n        // Editing\n\n        editSVGNodes: \"f2\", //Node編集モードの開始\n        escapeEditor: \"esc\", // Property Editor の終了\n\n        // Especially for text content\n\n        submitEditingTextTypeSVGNode: \"enter\", //Node編集状態の確定\n        insertLF: \"alt+enter\", //textTypeのNode編集時に改行を挿入する\n        textAnchor_start:     \"alt+l\", //text align left\n        textAnchor_middle:    \"alt+c\", //text align center\n        textAnchor_end:       \"alt+r\", //text align right\n        textFontWeight_bold:  \"alt+b\", //bold\n        textFontStyle_italic: \"alt+i\", //italic\n        \n    };"
            }
        },
        {
            "key": "n2",
            "type": "text",
            "text": {
                "text_content": "var url_externalComponent = \"assets/components/force-layout-memo_compo.html\";"
            }
        },
        {
            "key": "n3",
            "type": "text",
            "text": {
                "text_content": "var fileName_Export = \"Nodes.json\";"
            }
        },
        {
            "key": "n4",
            "type": "text",
            "text": {
                "text_content": "var fileName_svg_Export = \"Nodes.svg\";"
            }
        },
        {
            "key": "n5",
            "type": "text",
            "text": {
                "text_content": "var defaultTextFrameShape = \"ellipse\";"
            }
        },
        {
            "key": "n6",
            "type": "text",
            "text": {
                "text_content": "var defaultLinkhape = \"line\";"
            }
        },
        {
            "key": "n7",
            "type": "text",
            "text": {
                "text_content": "var valOfpadding_frame_text = 5;"
            }
        },
        {
            "key": "n8",
            "type": "text",
            "text": {
                "text_content": "var valOfLineHightInText = 1.3;"
            }
        },
        {
            "key": "n9",
            "type": "text",
            "text": {
                "text_content": "var className_propertyEditConsoleElement = \"propertyEditConsole\";"
            }
        },
        {
            "key": "n10",
            "type": "text",
            "text": {
                "text_content": "var className_transactionHistoryElement = \"transactionHistory\";"
            }
        },
        {
            "key": "n11",
            "type": "text",
            "text": {
                "text_content": "var className_statusMessageElement = \"statusMessage\";"
            }
        },
        {
            "key": "n12",
            "type": "text",
            "text": {
                "text_content": "var className_SVGElementForNodesMapping = \"SVGForNodesMapping\";"
            }
        },
        {
            "key": "n13",
            "type": "text",
            "text": {
                "text_content": "var className_SVGGroupForNodes = \"nodes\";"
            }
        },
        {
            "key": "n14",
            "type": "text",
            "text": {
                "text_content": "var className_SVGGroupForLinkes = \"links\";"
            }
        },
        {
            "key": "n15",
            "type": "text",
            "text": {
                "text_content": "var className_SVGGroupForSelectionLayers = \"selectionLayers\";"
            }
        },
        {
            "key": "n16",
            "type": "text",
            "text": {
                "text_content": "var className_nodeIsSelected = \"selected\";"
            }
        },
        {
            "key": "n17",
            "type": "text",
            "text": {
                "text_content": "var firstHistoryMessage = \"New\";"
            }
        },
        {
            "key": "n18",
            "type": "text",
            "text": {
                "text_content": "var classNameInMotherElem = \"force-layout-memo\";"
            }
        },
        {
            "key": "n19",
            "type": "text",
            "text": {
                "text_content": "var forSpectrumRegisteringOptionObj = {\n        showAlpha: true,\n        allowEmpty: false,\n        showInitial: true,\n        clickoutFiresChange: true, // <- spectrum (color picker) の範囲外をクリックする or ESC押下時に、\n                                   //    最後に入力されていたtinyColorObjを、\n                                   //    'change'イベント、'hide'イベントそれぞれに渡す(コール順序は'change'→'hide')\n                                   //    最後に入力されていたtinyColorObjがEmptyな場合は、nullを渡す\n        preferredFormat: \"rgb\",\n    }\n\n    "
            }
        },
        {
            "key": "n20",
            "type": "text",
            "text": {
                "text_content": "var defaultLinkDistance = 100;"
            }
        },
        {
            "key": "n21",
            "type": "text",
            "text": {
                "text_content": "var idName_superElement = \"\";"
            }
        },
        {
            "key": "n22",
            "type": "text",
            "text": {
                "text_content": "var dataset = { //Bind用Dataset\n        datas:[],\n        links:[]\n    };"
            }
        },
        {
            "key": "n23",
            "type": "text",
            "text": {
                "text_content": "var transactionHistory = [];"
            }
        },
        {
            "key": "n24",
            "type": "text",
            "text": {
                "text_content": "var nowEditng = false;"
            }
        },
        {
            "key": "n25",
            "type": "text",
            "text": {
                "text_content": "var nowTyping = false;"
            }
        },
        {
            "key": "n26",
            "type": "text",
            "text": {
                "text_content": "var editingNodeKeys = [];"
            }
        },
        {
            "key": "n27",
            "type": "text",
            "text": {
                "text_content": "var editingLinkKeys = [];"
            }
        },
        {
            "key": "n28",
            "type": "text",
            "text": {
                "text_content": "var $3motherElement;"
            }
        },
        {
            "key": "n29",
            "type": "text",
            "text": {
                "text_content": "var $3propertyEditConsoleElement;"
            }
        },
        {
            "key": "n30",
            "type": "text",
            "text": {
                "text_content": "var $propertyEditConsoleElement;"
            }
        },
        {
            "key": "n31",
            "type": "text",
            "text": {
                "text_content": "var UIisEnable = false;"
            }
        },
        {
            "key": "n32",
            "type": "text",
            "text": {
                "text_content": "var isAnimatingPropertyEditConsoleElement = false;"
            }
        },
        {
            "key": "n33",
            "type": "text",
            "text": {
                "text_content": "var $propertyEditConsoleElement_node;"
            }
        },
        {
            "key": "n34",
            "type": "text",
            "text": {
                "text_content": "var $propertyEditConsoleElement_link;"
            }
        },
        {
            "key": "n35",
            "type": "text",
            "text": {
                "text_content": "var $3transactionHistoryElement;"
            }
        },
        {
            "key": "n36",
            "type": "text",
            "text": {
                "text_content": "var $transactionHistoryElement = null;"
            }
        },
        {
            "key": "n37",
            "type": "text",
            "text": {
                "text_content": "var $3statusMessageElement;"
            }
        },
        {
            "key": "n38",
            "type": "text",
            "text": {
                "text_content": "var $3statusMessageElement_first;"
            }
        },
        {
            "key": "n39",
            "type": "text",
            "text": {
                "text_content": "var $3statusMessageElement_second;"
            }
        },
        {
            "key": "n40",
            "type": "text",
            "text": {
                "text_content": "var $3SVGDrawingAreaElement;"
            }
        },
        {
            "key": "n41",
            "type": "text",
            "text": {
                "text_content": "var $SVGDrawingAreaElement;"
            }
        },
        {
            "key": "n42",
            "type": "text",
            "text": {
                "text_content": "var $3svgNodesGroup;"
            }
        },
        {
            "key": "n43",
            "type": "text",
            "text": {
                "text_content": "var $3svgNodes;"
            }
        },
        {
            "key": "n44",
            "type": "text",
            "text": {
                "text_content": "var $3svgLinksGroup;"
            }
        },
        {
            "key": "n45",
            "type": "text",
            "text": {
                "text_content": "var $3svgLinks;"
            }
        },
        {
            "key": "n46",
            "type": "text",
            "text": {
                "text_content": "var $3selectionLayersGroup;"
            }
        },
        {
            "key": "n47",
            "type": "text",
            "text": {
                "text_content": "var lastTransFormObj_d3style = null;"
            }
        },
        {
            "key": "n48",
            "type": "text",
            "text": {
                "text_content": "var lastCoordinate = {\n        rightClick:{x:0, y:0},\n        mouse:{x:0, y:0}\n    }\n    "
            }
        },
        {
            "key": "n49",
            "type": "text",
            "text": {
                "text_content": "var lastUIEvent = 0;"
            }
        },
        {
            "key": "n50",
            "type": "text",
            "text": {
                "text_content": "var ignoreKeyUp = false;"
            }
        },
        {
            "key": "n51",
            "type": "text",
            "text": {
                "text_content": "var binCode_KeyPressing = 0;"
            }
        },
        {
            "key": "n52",
            "type": "text",
            "text": {
                "text_content": "var sourceHilighted = false;"
            }
        },
        {
            "key": "n53",
            "type": "text",
            "text": {
                "text_content": "var targetHilighted = false;"
            }
        },
        {
            "key": "n54",
            "type": "text",
            "text": {
                "text_content": "var highlightingStartPointKey = null;"
            }
        },
        {
            "key": "n55",
            "type": "text",
            "text": {
                "text_content": "this.loadFile = function(filePath){\n        \n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', filePath, true);\n        xhr.responseType = 'text';\n        xhr.onloadend = function(e){\n\n            if (xhr.readyState === 4 && // 'DONE' の場合   https://developer.mozilla.org/ja/docs/Web/API/XMLHttpRequest/readyState\n                xhr.status === 200){    // '200 OK' の場合 https://developer.mozilla.org/ja/docs/Web/HTTP/Status\n\n                var retObj = appendNodesFromText(xhr.response, true, true);\n                if(!retObj.allOK){\n                    console.warn(\"Following error was occurred while loading `\" + filePath + \"`. This file will be ignored.\");\n                    console.warn(retObj.errObj);\n                }\n\n                \n            }else{\n                console.error('Cannot access to Specified file `' + filePath + \"`\");\n            }\n        };\n        xhr.send();\n\n    }"
            }
        },
        {
            "key": "n56",
            "type": "text",
            "text": {
                "text_content": "var tmpType = typeof initializerObj;"
            }
        },
        {
            "key": "n57",
            "type": "text",
            "text": {
                "text_content": "tmpType == 'undefined'"
            }
        },
        {
            "key": "n58",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Required argument `initializerObj` is undefined\")"
            }
        },
        {
            "key": "n59",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n60",
            "type": "text",
            "text": {
                "text_content": "tmpType != 'object'"
            }
        },
        {
            "key": "n61",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Required argument `initializerObj` is defined as `\" + tmpType + \"` type. Required type is `object`.\")"
            }
        },
        {
            "key": "n62",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n63",
            "type": "text",
            "text": {
                "text_content": "var tmpType = typeof initializerObj.elemIdNameToBind;"
            }
        },
        {
            "key": "n64",
            "type": "text",
            "text": {
                "text_content": "tmpType == 'undefined'"
            }
        },
        {
            "key": "n65",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Required argument `initializerObj.elemIdNameToBind` is undefined\")"
            }
        },
        {
            "key": "n66",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n67",
            "type": "text",
            "text": {
                "text_content": "tmpType != 'string'"
            }
        },
        {
            "key": "n68",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Required argument `initializerObj.elemIdNameToBind` is defined as `\" + tmpType + \"` type. Required type is `string`.\")"
            }
        },
        {
            "key": "n69",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n70",
            "type": "text",
            "text": {
                "text_content": "var tmpElem = document.getElementById(initializerObj.elemIdNameToBind);"
            }
        },
        {
            "key": "n71",
            "type": "text",
            "text": {
                "text_content": "tmpElem === null"
            }
        },
        {
            "key": "n72",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Specified argment initializerObj.elemIdNameToBind:`\" + initializerObj.elemIdNameToBind + \"` is not exist.\")"
            }
        },
        {
            "key": "n73",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n74",
            "type": "text",
            "text": {
                "text_content": "tmpElem.classList.contains(classNameInMotherElem)"
            }
        },
        {
            "key": "n75",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Specified element (specified by argment initializerObj.elemIdNameToBind:`\" + initializerObj.elemIdNameToBind + \"`) has already class name `\" + classNameInMotherElem + \"`.\")"
            }
        },
        {
            "key": "n76",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n77",
            "type": "text",
            "text": {
                "text_content": "idName_superElement = initializerObj.elemIdNameToBind"
            }
        },
        {
            "key": "n78",
            "type": "text",
            "text": {
                "text_content": "var tmpType = typeof initializerObj.componentPath;"
            }
        },
        {
            "key": "n79",
            "type": "text",
            "text": {
                "text_content": "tmpType != 'undefined'"
            }
        },
        {
            "key": "n80",
            "type": "text",
            "text": {
                "text_content": "tmpType != 'string'"
            }
        },
        {
            "key": "n81",
            "type": "text",
            "text": {
                "text_content": "console.error(\"Specified argument `initializerObj.componentPath` is defined as `\" + tmpType + \"` type. Required type is `string`.\")"
            }
        },
        {
            "key": "n82",
            "type": "text",
            "text": {
                "text_content": "return;"
            }
        },
        {
            "key": "n83",
            "type": "text",
            "text": {
                "text_content": "url_externalComponent = initializerObj.componentPath"
            }
        },
        {
            "key": "n84",
            "type": "text",
            "text": {
                "text_content": "var mousetrapInstance = new Mousetrap();"
            }
        },
        {
            "key": "n85",
            "type": "text",
            "text": {
                "text_content": "var dataSelectionManager = new clsfnc_dataSelectionManager();"
            }
        },
        {
            "key": "n86",
            "type": "text",
            "text": {
                "text_content": "var messageManager = new clsfnc_messageManager();"
            }
        },
        {
            "key": "n87",
            "type": "text",
            "text": {
                "text_content": "var historyManager = new clsfnc_historyManager();"
            }
        },
        {
            "key": "n88",
            "type": "text",
            "text": {
                "text_content": "var propertyEditorsManager;"
            }
        },
        {
            "key": "n89",
            "type": "text",
            "text": {
                "text_content": "$3motherElement = d3.select(\"#\" + idName_superElement) //全てのもと\n        .classed(classNameInMotherElem, true)\n        .style(\"font-size\", \"0\")\n        .style(\"overflow\", \"hidden\")\n        .style(\"position\", \"relative\")"
            }
        },
        {
            "key": "n90",
            "type": "text",
            "text": {
                "text_content": "$3propertyEditConsoleElement = $3motherElement.append(\"div\") //Property Edit Console\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", 10)\n        .style(\"margin\", 0)\n        .style(\"border\", 0)\n        .style(\"padding\", 0)\n        .style(\"display\",\"none\")\n        .classed(className_propertyEditConsoleElement, true)"
            }
        },
        {
            "key": "n91",
            "type": "text",
            "text": {
                "text_content": "$propertyEditConsoleElement = $($3propertyEditConsoleElement.node())"
            }
        },
        {
            "key": "n92",
            "type": "text",
            "text": {
                "text_content": "$propertyEditConsoleElement.load(url_externalComponent,function(responseText, textStatus, jqXHR) {\n\n        //成功確認\n        if(textStatus === \"error\"){\n            console.error(\"Cannot load `\" + url_externalComponent + \"`. statusText:`\" + jqXHR.statusText + \"`\");\n            return;\n        }\n\n        propertyEditorsManager = new wrapperOfPropertyEditors(); //PropertyEditConsole\n        toggleBeforeLoadEvent(); //ページ移動前確認イベントをaddEvent\n\n    })"
            }
        },
        {
            "key": "n93",
            "type": "text",
            "text": {
                "text_content": "$3transactionHistoryElement = $3motherElement.append(\"div\") //transaction history\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", 10)\n        .style(\"margin\", 0)\n        .style(\"border\", 0)\n        .style(\"padding\", 0)\n        .style(\"right\",0)\n        .style(\"white-space\",\"nowrap\")\n        .style(\"overflow\",\"auto\")\n        .classed(className_transactionHistoryElement, true)\n        .attr(\"wrap\",\"off\")"
            }
        },
        {
            "key": "n94",
            "type": "text",
            "text": {
                "text_content": "$transactionHistoryElement = $($3transactionHistoryElement.node()).eq(0)"
            }
        },
        {
            "key": "n95",
            "type": "text",
            "text": {
                "text_content": "$3statusMessageElement = $3motherElement.append(\"div\") //status message\n        .style(\"position\", \"absolute\")\n        .style(\"z-index\", 10)\n        .style(\"margin\", 0)\n        .style(\"border\", 0)\n        .style(\"padding\", 0)\n        .style(\"width\", \"100%\")\n        .style(\"bottom\", \"30px\")\n        .style(\"text-align\", \"center\")\n        .style(\"pointer-events\", \"none\")\n        .append(\"div\")\n        .style(\"display\", \"inline-block\")\n        .style(\"visibility\", \"hidden\")\n        .style(\"pointer-events\", \"auto\")\n        .classed(className_statusMessageElement, true)"
            }
        },
        {
            "key": "n96",
            "type": "text",
            "text": {
                "text_content": "var $3statusMessageElement_div = $3statusMessageElement.append(\"div\")\n        .classed(\"statusMessage_div\", true)\n    "
            }
        },
        {
            "key": "n97",
            "type": "text",
            "text": {
                "text_content": "$3statusMessageElement_first = $3statusMessageElement_div.append(\"div\")\n        .classed(\"title\",true)"
            }
        },
        {
            "key": "n98",
            "type": "text",
            "text": {
                "text_content": "$3statusMessageElement_second = $3statusMessageElement_div.append(\"p\")\n        .classed(\"description\",true)"
            }
        },
        {
            "key": "n99",
            "type": "text",
            "text": {
                "text_content": "$3SVGDrawingAreaElement = $3motherElement.append(\"svg\") //Node描画用SVGの作成\n        .classed(className_SVGElementForNodesMapping, true)\n        .style(\"width\", \"100%\")\n        .style(\"height\", \"100%\")\n        .style(\"overflow\", \"hidden\") // <- ieではこれを指定しないと範囲外の小要素がクリップされない\n        .style(\"vertical-align\", \"bottom\")"
            }
        },
        {
            "key": "n100",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement = $($3SVGDrawingAreaElement.node())"
            }
        },
        {
            "key": "n101",
            "type": "text",
            "text": {
                "text_content": "$3SVGDrawingAreaElement.append(\"defs\")\n        .append(\"marker\")\n        .attr(\"id\", \"arrow1\")\n        .attr(\"refX\", 40)\n        .attr(\"refY\", 1)\n        .attr(\"viewBox\", \"0 -10 20 20\")\n        .attr(\"markerWidth\", \"20\")\n        .attr(\"markerHeight\", \"20\")\n        .attr(\"markerUnits\", \"userSpaceOnUse\")\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .attr(\"d\", \"M0,-10 L20,0 0,10 Z\")\n        .attr(\"fill\", \"#eab942\")"
            }
        },
        {
            "key": "n102",
            "type": "text",
            "text": {
                "text_content": "$3svgLinksGroup = $3SVGDrawingAreaElement.append(\"g\") //linkグループの作成\n        .classed(className_SVGGroupForLinkes, true)"
            }
        },
        {
            "key": "n103",
            "type": "text",
            "text": {
                "text_content": "$3svgNodesGroup = $3SVGDrawingAreaElement.append(\"g\") //ノードグループの作成\n        .classed(className_SVGGroupForNodes, true)"
            }
        },
        {
            "key": "n104",
            "type": "text",
            "text": {
                "text_content": "$3selectionLayersGroup = $3SVGDrawingAreaElement.append(\"g\") //Selection Layer 用グループの作成\n        .classed(className_SVGGroupForSelectionLayers, true)"
            }
        },
        {
            "key": "n105",
            "type": "text",
            "text": {
                "text_content": "$3svgNodes = $3svgNodesGroup.selectAll(\"g.node\") // ノード追加\n        .data(dataset.datas, function(d){return d.key})"
            }
        },
        {
            "key": "n106",
            "type": "text",
            "text": {
                "text_content": "$3svgLinks = $3svgLinksGroup.selectAll(\"g.link\") // link追加\n        .data(dataset.links, function(d){return d.key})"
            }
        },
        {
            "key": "n107",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement.get(0).addEventListener('dragover', function(e){\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n108",
            "type": "text",
            "text": {
                "text_content": "var totalReport = null;"
            }
        },
        {
            "key": "n109",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement.get(0).addEventListener('drop', function(e){\n\n        //External Componentが未loadの場合はハジく\n        if(!(checkSucceededLoadOf_ExternalComponent())){return;}\n        \n        var files = e.dataTransfer.files;\n        totalReport = null;\n        readFilesSequential(0); //ドロップされた各ファイルへのループ\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n\n        //ドロップされたファイルを順次読み込みする\n        function readFilesSequential(indexOfFiles){\n\n            if(indexOfFiles >= files.length){ //読み込むファイルがない場合\n                \n                if(totalReport !== null){\n                    selectNodesByReport(totalReport);\n                }\n                totalReport = null;\n                return;\n            }\n\n            var droppedFileObj = files[indexOfFiles];\n            var typ = droppedFileObj.type;\n            var nm = droppedFileObj.name;\n            var dots = nm.split('.');\n            var ext = (dots[dots.length - 1]).toLowerCase();\n\n            //ファイル形式判定\n            if((ext == 'json') &&               //\n                ((typ == 'application/json') || //\n                 (typ == '' && ext))){          // -> json形式の場合\n\n                var file_reader = new FileReader();\n                file_reader.onload = function(e){\n                    var retObj = appendNodesFromText(file_reader.result, true, false);\n                    if(!retObj.allOK){\n                        console.warn(\"Following error was occurred while loading `\" + filePath + \"`. This file will be ignored.\");\n                        console.warn(retObj.errObj);\n                    \n                    }else{ //parse 成功の場合\n                        if(totalReport === null){\n                            totalReport = retObj.appendingTotalReport;\n                        \n                        }else{\n\n                            //merge report\n                            var oneTotalReport = retObj.appendingTotalReport;\n                            if(!oneTotalReport.allOK){ //失敗が発生した場合\n                                totalReport.allOK = false;\n                            }\n                            totalReport.reportsArr.datas = totalReport.reportsArr.datas.concat(oneTotalReport.reportsArr.datas);\n                            totalReport.reportsArr.links = totalReport.reportsArr.links.concat(oneTotalReport.reportsArr.links);\n                        }\n                    }\n\n                    readFilesSequential(indexOfFiles+1); //次のファイルを読み込み\n                };\n                file_reader.readAsText(droppedFileObj);\n\n            }else{ //不明なファイル形式の場合\n                console.warn(\"unknown file type `\" + typ + \"` detected in `\" + nm + \"`.\");\n                readFilesSequential(indexOfFiles+1); //次のファイルを読み込み\n            }\n        }\n    })"
            }
        },
        {
            "key": "n110",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement.get(0).addEventListener('dragleave', function(e){\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n111",
            "type": "text",
            "text": {
                "text_content": "$(document).on('click', function(e) {\n        checkUIisEnable(e);\n\n    })"
            }
        },
        {
            "key": "n112",
            "type": "text",
            "text": {
                "text_content": "$(document).on(\"mousedown\", function(e){\n        checkUIisEnable(e);\n\n    })"
            }
        },
        {
            "key": "n113",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement.on('click', function(e){\n\n        // SVG領域に対する選択でない場合(Node等)はハジく\n        if(!(d3.select(e.target).classed(className_SVGElementForNodesMapping))){return;}\n\n        //External Componentが未loadの場合はハジく\n        if(!(checkSucceededLoadOf_ExternalComponent())){return;}\n        \n        if(nowEditng){ // 編集中の場合\n\n            exitEditing(); //編集モードの終了\n        \n        }else{  // 編集中でない場合\n            \n            dataSelectionManager.clearSelections(); //node選択状態をクリア\n        }\n    })"
            }
        },
        {
            "key": "n114",
            "type": "text",
            "text": {
                "text_content": "var clsNameForCntxtMenu = getUniqueClassName('context-menu-container-');"
            }
        },
        {
            "key": "n115",
            "type": "text",
            "text": {
                "text_content": "var clsNameInCntxtMenu =  getUniqueClassName('context-menu-');"
            }
        },
        {
            "key": "n116",
            "type": "text",
            "text": {
                "text_content": "$3SVGDrawingAreaElement.classed(clsNameForCntxtMenu, true)"
            }
        },
        {
            "key": "n117",
            "type": "text",
            "text": {
                "text_content": "$.contextMenu({\n        className: clsNameInCntxtMenu,\n        selector: '.' + clsNameForCntxtMenu,\n        items: {\n            add:{\n                name: \"Add (A)\",\n                accesskey: 'a',\n                callback: function(itemKey, opt){\n                    var uniqueDataKeyName;\n                    if(dataset.datas.length == 0){\n                        uniqueDataKeyName = '0';\n                    }else{\n                        uniqueDataKeyName = makeUniqueKey(dataset.datas[(dataset.datas.length-1)].key, isReservedDataKey);\n                    }\n                    var appendingTotalReport = appendNodes({\n                        datas:[\n                            {\n                                key:uniqueDataKeyName,\n                                coordinate: { //右クリック位置に挿入する\n                                    x:lastCoordinate.rightClick.x,\n                                    y:lastCoordinate.rightClick.y\n                                },\n                                type:\"text\",\n                                text: {\n                                    text_content: \"\"\n                                }\n                            }\n                        ]\n                    });\n                    historyManager.appendHistory(appendingTotalReport);\n\n                    var bindedData =  getBindedDataFromKey(appendingTotalReport.reportsArr.datas[0].key);\n                    call_editSVGNode(bindedData);\n                }\n            },\n            edit:{\n                //編集開始\n                name: \"Edit (\" + keySettings.editSVGNodes.toUpperCase() + \")\",\n                //accesskey の handling は keySettings.editSVGNodes に任せる\n                callback: function(itemKey, opt){\n                    call_editSVGNodes(false);\n                }\n            },\n            connect:{\n                name: \"Connect(C)\",\n                accesskey: 'c', //todo keySettings.connectDatasとの競合回避\n                callback: function(itemKey, opt){\n                    if(!connectStarted){\n                        checkStartConnect();\n                    }else{\n                        removeConnect();\n                    }\n                    return callbackFinally(true);\n                }\n            },\n            brush:{\n                name: \"Brush(B)\",\n                accesskey: 'b', //todo keySettings.brushSelectingとの競合回避\n                callback: function(itemKey, opt){\n                    if($3NodeSelectingBrushGroup === null){\n                        startBrush();\n                    }else{\n                        removeBrush();\n                    }\n                    return callbackFinally(true);\n                }\n            },\n            export: {\n                //エクスポート\n                name: \"Export (E)\",\n                accesskey: 'e',\n                items:{\n                    export_all:{\n                        name: \"Export all (A)\",\n                        accesskey: 'a',//todo <- \"Add (A)\"が優先されてしまう\n                        callback: function(itemKey, opt){\n                            //DL確認画面終了後にhide出来ないことがあるので、先にhideする\n                            opt.$menu.trigger(\"contextmenu:hide\");\n\n                            exportNodes(false); //全Node(s)ファイル吐き出し\n                        }\n                    },\n                    export_selected:{\n                        name: \"Export selected (S)\",\n                        accesskey: 's',\n                        callback: function(itemKey, opt){\n                            //DL確認画面終了後にhide出来ないことがあるので、先にhideする\n                            opt.$menu.trigger(\"contextmenu:hide\");\n\n                            exportNodes(true); //選択Node(s)ファイル吐き出し\n                        }\n                    },\n                    export_as_svg_all:{\n                        name: \"Export as SVG (all)\",\n                        // accesskey: 's',\n                        callback: function(itemKey, opt){\n                            //DL確認画面終了後にhide出来ないことがあるので、先にhideする\n                            opt.$menu.trigger(\"contextmenu:hide\");\n\n                            exportSVG(false);\n                        }\n                    },\n                    export_as_svg_view_port_only:{\n                        name: \"Export as SVG (current display range)\",\n                        // accesskey: 's',\n                        callback: function(itemKey, opt){\n                            //DL確認画面終了後にhide出来ないことがあるので、先にhideする\n                            opt.$menu.trigger(\"contextmenu:hide\");\n\n                            exportSVG(true);\n                        }\n                    },\n                }\n                \n            },\n        },\n        position: function (opt, x, y) { //caution! x <- pageX, y <- pageY\n\n            var boundingClientRect = $SVGDrawingAreaElement.get(0).getBoundingClientRect();\n            \n            var transformObj = {\n                translates: {x:0, y:0},\n                scale: 1\n            };\n\n            if(lastTransFormObj_d3style !== null){\n                transformObj.translates.x = lastTransFormObj_d3style.x;\n                transformObj.translates.y = lastTransFormObj_d3style.y;\n                transformObj.scale = lastTransFormObj_d3style.k;\n            }\n\n            //右クリック位置の保存\n            lastCoordinate.rightClick.x = ((x - (boundingClientRect.left + window.pageXOffset)) - transformObj.translates.x) / transformObj.scale;\n            lastCoordinate.rightClick.y = ((y - (boundingClientRect.top + window.pageYOffset)) - transformObj.translates.y) / transformObj.scale;\n\n            var $win = $(window);\n\n            //<Same as jquery.contextMenu-2.7.1.js>-----------------\n\n            var offset;\n            // determine contextMenu position\n            if (!x && !y) {\n                opt.determinePosition.call(this, opt.$menu);\n                return;\n            } else if (x === 'maintain' && y === 'maintain') {\n                // x and y must not be changed (after re-show on command click)\n                offset = opt.$menu.position();\n            } else {\n                // x and y are given (by mouse event)\n                var offsetParentOffset = opt.$menu.offsetParent().offset();\n                offset = {top: y - offsetParentOffset.top, left: x -offsetParentOffset.left};\n            }\n\n            // correct offset if viewport demands it\n            var bottom = $win.scrollTop() + $win.height(),\n                right = $win.scrollLeft() + $win.width(),\n                height = opt.$menu.outerHeight(),\n                width = opt.$menu.outerWidth();\n\n            if (offset.top + height > bottom) {\n                offset.top -= height;\n            }\n\n            if (offset.top < 0) {\n                offset.top = 0;\n            }\n\n            if (offset.left + width > right) {\n                offset.left -= width;\n            }\n\n            if (offset.left < 0) {\n                offset.left = 0;\n            }\n\n            opt.$menu.css(offset);\n\n            //----------------</Same as jquery.contextMenu-2.7.1.js>\n        },\n        callback: function(itemKey, opt){ //keyup event\n            //DL確認画面終了後にhide出来ないことがあるので、先にhideする\n            opt.$menu.trigger(\"contextmenu:hide\");\n            \n            console.warn(\"Unkown Item selected. Itemkey:`\" + itemKey + \"`, DOM: \", opt.$trigger.get(0));\n        }\n    })"
            }
        },
        {
            "key": "n118",
            "type": "text",
            "text": {
                "text_content": "$('.' + clsNameInCntxtMenu).css('z-index', '20')"
            }
        },
        {
            "key": "n119",
            "type": "text",
            "text": {
                "text_content": "var zoom = d3.zoom()\n        .on(\"zoom\", function(){\n            lastTransFormObj_d3style = d3.event.transform; //最終状態を保存(Node Append/復活時に利用する)\n\n            $3svgNodes.each(function(d, i){\n                d.$3bindedSVGElement.attr(\"transform\", lastTransFormObj_d3style);\n                d.$3bindedSelectionLayerSVGElement.attr(\"transform\", lastTransFormObj_d3style);\n            });\n\n            $3svgLinks.each(function(d, i){\n                d.$3bindedSVGLinkElement.attr(\"transform\", lastTransFormObj_d3style);\n                d.$3bindedSelectionLayerSVGElement.attr(\"transform\", lastTransFormObj_d3style);\n            });\n\n            if(connectStarted){ // link 追加モードの場合は、preview 表示中のlinkも更新する\n                targetDrawerObj.$3bindedSVGLinkElement.attr(\"transform\", lastTransFormObj_d3style);\n                targetDrawerObj.$3bindedSelectionLayerSVGElement.attr(\"transform\", lastTransFormObj_d3style);\n            }\n\n            if(nowEditng){\n                adjustPropertyEditConsole(true); //Node個別編集機能のみadjustする(heavyすぎる為)\n            }\n        });"
            }
        },
        {
            "key": "n120",
            "type": "text",
            "text": {
                "text_content": "startZoom()"
            }
        },
        {
            "key": "n121",
            "type": "text",
            "text": {
                "text_content": "$(document.body).on(\"contextmenu:focus\", \".context-menu-item\", \n        function(e){\n            //console.log(\"focus:\", this);\n        }\n    )"
            }
        },
        {
            "key": "n122",
            "type": "text",
            "text": {
                "text_content": "$(document.body).on(\"contextmenu:blur\", \".context-menu-item\",\n        function(e){ \n            //console.log(\"blur:\", this);\n        }\n    )"
            }
        },
        {
            "key": "n123",
            "type": "text",
            "text": {
                "text_content": "$(document).on(\"keydown\", function(e){\n        \n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n\n        lastUIEvent = 1; //key event が発生した事を記録\n\n        switch(e.keyCode){\n\n            case 93: //application key\n            {\n                applicationKeyDwon(e);\n            }\n            break;\n\n            default:\n            break;\n        }\n    })"
            }
        },
        {
            "key": "n124",
            "type": "text",
            "text": {
                "text_content": "var returnThisOnContextMenu = true;"
            }
        },
        {
            "key": "n125",
            "type": "text",
            "text": {
                "text_content": "$(document).on(\"contextmenu\", function(){\n        \n        //キーボードの application key 押下で context menu を表示させていた場合はfalse\n        // -> ブラウザ標準の context menu を表示させない\n        //そうでない場合はブラウザ標準の context menu を表示させる\n        var tmp = returnThisOnContextMenu;\n        returnThisOnContextMenu = true;\n        return tmp;\n    })"
            }
        },
        {
            "key": "n126",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.editSVGNodes, function(e){\n\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n\n        call_editSVGNodes(true);\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n127",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.escapeEditor, function(e, combo){\n\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n\n        if(nowEditng){ // 編集中の場合\n            exitEditing(); //編集モードの終了\n        \n        }else if(connectStarted){ //connect モード中の場合\n            removeConnect(); //connect モード終了\n        \n        }else if($3NodeSelectingBrushGroup !== null){ // brush 選択中の場合\n            removeBrush(); //brush 終了\n        }\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n128",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.deleteNodes, function(e){\n\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n\n        //External Component が未 load でない場合\n        if(checkSucceededLoadOf_ExternalComponent()){\n            if(nowEditng){ // 編集中の場合\n                //nothing to do\n            \n            }else{ // 編集中でない場合\n    \n                deleteSVGNodes(); //選択状態のNode(s)を削除\n                disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n            }\n        }\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n129",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.selectNodeRight, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        // console.log(\">\");\n        call_getColsestData(\"right_an90\");\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n130",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.selectNodeLeft, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        // console.log(\"<\");\n        call_getColsestData(\"left_an90\");\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n131",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.selectNodeAbove, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        // console.log(\"^\");\n        call_getColsestData(\"above_an90\");\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n132",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.selectNodeBelow, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        // console.log(\"v\");\n        call_getColsestData(\"below_an90\");\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n133",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesSource, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        binCode_KeyPressing |= 1;\n        call_appendHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keydown')"
            }
        },
        {
            "key": "n134",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesSource, function(e, combo){\n        binCode_KeyPressing &= (~1);\n        call_removeHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keyup')"
            }
        },
        {
            "key": "n135",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesTarget, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        binCode_KeyPressing |= 2;\n        call_appendHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keydown')"
            }
        },
        {
            "key": "n136",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesTarget, function(e, combo){\n        binCode_KeyPressing &= (~2);\n        call_removeHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keyup')"
            }
        },
        {
            "key": "n137",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesSourceAndTarget, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        binCode_KeyPressing |= 4;\n        call_appendHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keydown')"
            }
        },
        {
            "key": "n138",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.highlightNodesSourceAndTarget, function(e, combo){\n        binCode_KeyPressing &= (~4);\n        call_removeHighlight();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keyup')"
            }
        },
        {
            "key": "n139",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.brushSelecting, function(e, combo){\n        if(isEnableContextMenu()){return;}\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        startBrush();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keydown')"
            }
        },
        {
            "key": "n140",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.brushSelecting, function(e, combo){\n        if(checkIgnoreKeyUp()){return;}\n        removeBrush();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keyup')"
            }
        },
        {
            "key": "n141",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.connectDatas, function(e, combo){\n        if(isEnableContextMenu()){return;}\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n        checkStartConnect();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keydown')"
            }
        },
        {
            "key": "n142",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.connectDatas, function(e, combo){\n        if(checkIgnoreKeyUp()){return;}\n        removeConnect();\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    }, 'keyup')"
            }
        },
        {
            "key": "n143",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.undo, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n\n        historyManager.traceHistory(-1);\n        \n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n144",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.redo, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        if(nowTyping){return;} //<textarea>の編集中はハジく\n\n        historyManager.traceHistory(1);\n        \n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n145",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.textAnchor_start, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        changeStyle('start', ['text', 'text_anchor'], 'datas');\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n146",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.textAnchor_middle, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        changeStyle('middle', ['text', 'text_anchor'], 'datas');\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n147",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.textAnchor_end, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        changeStyle('end', ['text', 'text_anchor'], 'datas');\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n148",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.textFontWeight_bold, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        changeStyle('bold', ['text', 'text_font_weight'], 'datas');\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n149",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(keySettings.textFontStyle_italic, function(e, combo){\n        if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n        changeStyle('italic', ['text', 'text_font_style'], 'datas');\n        disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n    })"
            }
        },
        {
            "key": "n150",
            "type": "text",
            "text": {
                "text_content": "var browserIsIE11 = (navigator.userAgent.toLowerCase().indexOf('trident/7') > -1);"
            }
        },
        {
            "key": "n151",
            "type": "text",
            "text": {
                "text_content": "var clipboardEvent = null;"
            }
        },
        {
            "key": "n152",
            "type": "text",
            "text": {
                "text_content": "!browserIsIE11"
            }
        },
        {
            "key": "n153",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('cut', function(e){\n            // console.log(\"browser cut event\");\n            \n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            clipboardEvent = e;\n            cutNodesToClipboard();\n            clipboardEvent.preventDefault();\n        })"
            }
        },
        {
            "key": "n154",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('copy', function(e){\n            // console.log(\"browser copy event\");\n\n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            clipboardEvent = e;\n            copyNodesToClipboard();\n            clipboardEvent.preventDefault();\n        })"
            }
        },
        {
            "key": "n155",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('paste', function(e){\n            // console.log(\"browser paste event\");\n\n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            clipboardEvent = e;\n            pasteNodesFromClipboard();\n            clipboardEvent.preventDefault();\n        })"
            }
        },
        {
            "key": "n156",
            "type": "text",
            "text": {
                "text_content": "var $3NodeSelectingBrushGroup = null;"
            }
        },
        {
            "key": "n157",
            "type": "text",
            "text": {
                "text_content": "var unbindingBrushMove = false;"
            }
        },
        {
            "key": "n158",
            "type": "text",
            "text": {
                "text_content": "var brush = d3.brush()\n        .on(\"start\", function(){\n\n            //.call(brush.move, null); 起因のコールの場合はハジく\n            if(unbindingBrushMove){return;}\n            \n            //brush 開始時の selection 状態を保存\n            $3svgNodes.each(saveSelection);\n            $3svgLinks.each(saveSelection);\n\n            function saveSelection(d ,i){\n\n                var isSelected = (d.$3bindedSelectionLayerSVGElement.attr(\"data-selected\").toLowerCase() == 'true');\n\n                // brush 開始時の選択状態を保存\n                if(isSelected){\n                    d.$3bindedSelectionLayerSVGElement\n                        .attr(\"data-selected_when_brush_started\", \"true\");\n                }else{\n                    d.$3bindedSelectionLayerSVGElement\n                        .attr(\"data-selected_when_brush_started\", \"false\");\n                }\n            }\n        })\n        .on(\"brush\", function(){\n\n            //.call(brush.move, null); 起因のコールの場合は、\n            //d3.event.selection は null になってしまうため、ハジく\n            if(unbindingBrushMove){return;}\n\n            // console.log(\n            //     \"aboveLeft  x [0][0]:\" + d3.event.selection[0][0] + \", \" + \n            //     \"aboveLeft  y [0][1]:\" + d3.event.selection[0][1] + \", \" + \n            //     \"belowRight x [1][0]:\" + d3.event.selection[1][0] + \", \" + \n            //     \"belowRight y [1][1]:\" + d3.event.selection[1][1]\n            // );\n\n            //brush で囲った矩形エリアの SVG 空間内座標取得\n            var transformObj = {\n                translates: {x:0, y:0},\n                scale: 1\n            };\n    \n            if(lastTransFormObj_d3style !== null){\n                transformObj.translates.x = lastTransFormObj_d3style.x;\n                transformObj.translates.y = lastTransFormObj_d3style.y;\n                transformObj.scale = lastTransFormObj_d3style.k;\n            }\n\n            var aboveLeftX = (d3.event.selection[0][0] - transformObj.translates.x) / transformObj.scale;\n            var aboveLeftY =  (d3.event.selection[0][1] - transformObj.translates.y) / transformObj.scale;\n\n            var belowRightX =  (d3.event.selection[1][0] - transformObj.translates.x) / transformObj.scale;\n            var belowRightY =  (d3.event.selection[1][1] - transformObj.translates.y) / transformObj.scale;\n            \n            $3svgNodes.each(function(d ,i){\n\n                var isSelected = (d.$3bindedSelectionLayerSVGElement //brush 開始時の選択状態を取得\n                    .attr(\"data-selected_when_brush_started\").toLowerCase() == 'true');\n\n                var isSelectedBefore = (d.$3bindedSelectionLayerSVGElement //前回の .on(\"brush\" 時の選択状態を取得\n                        .attr(\"data-selected\").toLowerCase() == 'true');\n\n                if(aboveLeftX <= d.coordinate.x &&\n                    aboveLeftY <= d.coordinate.y &&\n                    d.coordinate.x <= belowRightX &&\n                    d.coordinate.y <= belowRightY){ //座標が brush area の範囲内の場合\n\n                    if(isSelected){ //brush 開始時に選択済みだった場合\n                        if(isSelectedBefore){ // 前回の .on(\"brush\" で非選択状態にしていない場合\n                            dataSelectionManager.spliceDataSelection(d); //node選択履歴から削除\n                        }\n\n                    }else{ //brush 開始時は未選択だった場合\n                        if(!isSelectedBefore){ // 前回の .on(\"brush\" で選択状態にしていない場合\n                            dataSelectionManager.pushDataSelection(d); //node選択履歴に追加\n                        }\n                    }\n                \n                }else{ //座標が brush area の範囲外の場合\n\n                    if(isSelected){ //brush 開始時に選択済みだった場合\n                        if(!isSelectedBefore){ // 前回の .on(\"brush\" で選択状態にしていない場合\n                            dataSelectionManager.pushDataSelection(d); //node選択履歴に追加\n                        }\n\n                    }else{ //brush 開始時は未選択だった場合\n                        if(isSelectedBefore){ // 前回の .on(\"brush\" で非選択状態にしていない場合\n                            dataSelectionManager.spliceDataSelection(d); //node選択履歴から削除\n                        }\n                    }\n                }\n            });\n\n            $3svgLinks.each(function(d ,i){\n\n                var isSelected = (d.$3bindedSelectionLayerSVGElement //brush 開始時の選択状態を取得\n                    .attr(\"data-selected_when_brush_started\").toLowerCase() == 'true');\n\n                var isSelectedBefore = (d.$3bindedSelectionLayerSVGElement //前回の .on(\"brush\" 時の選択状態を取得\n                    .attr(\"data-selected\").toLowerCase() == 'true');\n\n                if((aboveLeftX <= d.coordinate.x1 &&\n                    aboveLeftY <= d.coordinate.y1 &&\n                    d.coordinate.x1 <= belowRightX &&\n                    d.coordinate.y1 <= belowRightY) && //1つめの座標が brush area の範囲内の場合\n                    \n                    (aboveLeftX <= d.coordinate.x2 &&\n                        aboveLeftY <= d.coordinate.y2 &&\n                        d.coordinate.x2 <= belowRightX &&\n                        d.coordinate.y2 <= belowRightY)){ //2つめの座標が brush area の範囲内の場合\n\n                    if(isSelected){ //brush 開始時に選択済みだった場合\n                        if(isSelectedBefore){ // 前回の .on(\"brush\" で非選択状態にしていない場合\n                            dataSelectionManager.spliceLinkSelection(d); //node選択履歴から削除\n                        }\n\n                    }else{ //brush 開始時は未選択だった場合\n                        if(!isSelectedBefore){ // 前回の .on(\"brush\" で選択状態にしていない場合\n                            dataSelectionManager.pushLinkSelection(d); //node選択履歴に追加\n                        }\n                    }\n                \n                }else{ //座標が brush area の範囲外の場合\n\n                    if(isSelected){ //brush 開始時に選択済みだった場合\n                        if(!isSelectedBefore){ // 前回の .on(\"brush\" で選択状態にしていない場合\n                            dataSelectionManager.pushLinkSelection(d); //node選択履歴に追加\n                        }\n\n                    }else{ //brush 開始時は未選択だった場合\n                        if(isSelectedBefore){ // 前回の .on(\"brush\" で非選択状態にしていない場合\n                            dataSelectionManager.spliceLinkSelection(d); //node選択履歴から削除\n                        }\n                    }\n                }\n            });            \n        })\n        .on(\"end\", function(){ //選択終了イベント\n            \n            if(!unbindingBrushMove){ //Avoid infinite loop\n                \n                if($3NodeSelectingBrushGroup !== null){ // removeBrush(); していない場合\n\n                    unbindingBrushMove = true;\n                    // ↓ この処理内で、.on(\"??\" に登録した関数(この関数自身)がコールされてしまう ↓\n                    $3NodeSelectingBrushGroup.call(brush.move, null); //Brush 選択範囲表示のクリア\n                    unbindingBrushMove = false;\n                }\n\n                // .on(\"start\", で設定した data-selected_when_brush_started 属性のクリア\n                $3svgNodes.each(removeSavedSelection);\n                $3svgLinks.each(removeSavedSelection);\n\n                function removeSavedSelection(d,i){\n                    d.$3bindedSelectionLayerSVGElement.attr(\"data-selected_when_brush_started\", null);\n                }\n            }\n        })\n    "
            }
        },
        {
            "key": "n159",
            "type": "text",
            "text": {
                "text_content": "$SVGDrawingAreaElement.get(0).addEventListener(\"mousemove\",function(e){\n        \n        var boundingClientRect = $SVGDrawingAreaElement.get(0).getBoundingClientRect();\n\n        var transformObj = {\n            translates: {x:0, y:0},\n            scale: 1\n        };\n\n        if(lastTransFormObj_d3style !== null){\n            transformObj.translates.x = lastTransFormObj_d3style.x;\n            transformObj.translates.y = lastTransFormObj_d3style.y;\n            transformObj.scale = lastTransFormObj_d3style.k;\n        }\n\n        lastCoordinate.mouse.x = ((e.clientX - boundingClientRect.left) - transformObj.translates.x) / transformObj.scale;\n        lastCoordinate.mouse.y = ((e.clientY - boundingClientRect.top) - transformObj.translates.y) / transformObj.scale;\n\n    })"
            }
        },
        {
            "key": "n160",
            "type": "text",
            "text": {
                "text_content": "var connectStarted = false;"
            }
        },
        {
            "key": "n161",
            "type": "text",
            "text": {
                "text_content": "var targetDrawerObj = {};"
            }
        },
        {
            "key": "n162",
            "type": "text",
            "text": {
                "text_content": "var func_checkBeforePageMoving = function(e){\n        e.returnValue = \"Are you sure to leave this page?\"; //仮のメッセージ\n    }\n    "
            }
        },
        {
            "key": "n163",
            "type": "text",
            "text": {
                "text_content": "var simulation;"
            }
        },
        {
            "key": "n164",
            "type": "text",
            "text": {
                "text_content": "var widthOfScrollBar;"
            }
        },
        {
            "key": "n165",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(\"ctrl+x\", function(e, combo){\n            // console.log(\"Mousetrap cut event\");\n            \n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            cutNodesToClipboard();\n            \n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n166",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('cut', function(e){\n            // console.log(\"browser cut event\");\n            \n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n167",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(\"ctrl+c\", function(e, combo){\n            // console.log(\"Mousetrap copy event\");\n            \n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            copyNodesToClipboard();\n            \n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n168",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('copy', function(e){\n            // console.log(\"browser copy event\");\n\n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n169",
            "type": "text",
            "text": {
                "text_content": "mousetrapInstance.bind(\"ctrl+v\", function(e, combo){\n            // console.log(\"Mousetrap paste event\");\n            \n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            pasteNodesFromClipboard();\n            \n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n170",
            "type": "text",
            "text": {
                "text_content": "document.addEventListener('paste', function(e){\n            // console.log(\"browser paste event\");\n\n            if(!UIisEnable){return;} //UIエリア範囲外で mouse event を発生させていた場合はハジく\n            if(nowEditng){return;} //編集中の場合はハジく\n\n            disablingKeyEvent(e); //ブラウザにキーイベントを渡さない\n        })"
            }
        },
        {
            "key": "n171",
            "type": "text",
            "text": {
                "text_content": "exit"
            }
        }
    ],
    "links":[
        {
            "source":"n0",
            "target":"n1"
        },
        {
            "source":"n1",
            "target":"n2"
        },
        {
            "source":"n2",
            "target":"n3"
        },
        {
            "source":"n3",
            "target":"n4"
        },
        {
            "source":"n4",
            "target":"n5"
        },
        {
            "source":"n5",
            "target":"n6"
        },
        {
            "source":"n6",
            "target":"n7"
        },
        {
            "source":"n7",
            "target":"n8"
        },
        {
            "source":"n8",
            "target":"n9"
        },
        {
            "source":"n9",
            "target":"n10"
        },
        {
            "source":"n10",
            "target":"n11"
        },
        {
            "source":"n11",
            "target":"n12"
        },
        {
            "source":"n12",
            "target":"n13"
        },
        {
            "source":"n13",
            "target":"n14"
        },
        {
            "source":"n14",
            "target":"n15"
        },
        {
            "source":"n15",
            "target":"n16"
        },
        {
            "source":"n16",
            "target":"n17"
        },
        {
            "source":"n17",
            "target":"n18"
        },
        {
            "source":"n18",
            "target":"n19"
        },
        {
            "source":"n19",
            "target":"n20"
        },
        {
            "source":"n20",
            "target":"n21"
        },
        {
            "source":"n21",
            "target":"n22"
        },
        {
            "source":"n22",
            "target":"n23"
        },
        {
            "source":"n23",
            "target":"n24"
        },
        {
            "source":"n24",
            "target":"n25"
        },
        {
            "source":"n25",
            "target":"n26"
        },
        {
            "source":"n26",
            "target":"n27"
        },
        {
            "source":"n27",
            "target":"n28"
        },
        {
            "source":"n28",
            "target":"n29"
        },
        {
            "source":"n29",
            "target":"n30"
        },
        {
            "source":"n30",
            "target":"n31"
        },
        {
            "source":"n31",
            "target":"n32"
        },
        {
            "source":"n32",
            "target":"n33"
        },
        {
            "source":"n33",
            "target":"n34"
        },
        {
            "source":"n34",
            "target":"n35"
        },
        {
            "source":"n35",
            "target":"n36"
        },
        {
            "source":"n36",
            "target":"n37"
        },
        {
            "source":"n37",
            "target":"n38"
        },
        {
            "source":"n38",
            "target":"n39"
        },
        {
            "source":"n39",
            "target":"n40"
        },
        {
            "source":"n40",
            "target":"n41"
        },
        {
            "source":"n41",
            "target":"n42"
        },
        {
            "source":"n42",
            "target":"n43"
        },
        {
            "source":"n43",
            "target":"n44"
        },
        {
            "source":"n44",
            "target":"n45"
        },
        {
            "source":"n45",
            "target":"n46"
        },
        {
            "source":"n46",
            "target":"n47"
        },
        {
            "source":"n47",
            "target":"n48"
        },
        {
            "source":"n48",
            "target":"n49"
        },
        {
            "source":"n49",
            "target":"n50"
        },
        {
            "source":"n50",
            "target":"n51"
        },
        {
            "source":"n51",
            "target":"n52"
        },
        {
            "source":"n52",
            "target":"n53"
        },
        {
            "source":"n53",
            "target":"n54"
        },
        {
            "source":"n54",
            "target":"n55"
        },
        {
            "source":"n55",
            "target":"n56"
        },
        {
            "source":"n55",
            "target":"n171"
        },
        {
            "source":"n56",
            "target":"n57"
        },
        {
            "source":"n56",
            "target":"n171"
        },
        {
            "source":"n57",
            "target":"n58"
        },
        {
            "source":"n57",
            "target":"n60"
        },
        {
            "source":"n57",
            "target":"n171"
        },
        {
            "source":"n58",
            "target":"n59"
        },
        {
            "source":"n58",
            "target":"n171"
        },
        {
            "source":"n59",
            "target":"n171"
        },
        {
            "source":"n60",
            "target":"n61"
        },
        {
            "source":"n60",
            "target":"n63"
        },
        {
            "source":"n60",
            "target":"n171"
        },
        {
            "source":"n61",
            "target":"n62"
        },
        {
            "source":"n61",
            "target":"n171"
        },
        {
            "source":"n62",
            "target":"n171"
        },
        {
            "source":"n63",
            "target":"n64"
        },
        {
            "source":"n63",
            "target":"n171"
        },
        {
            "source":"n64",
            "target":"n65"
        },
        {
            "source":"n64",
            "target":"n67"
        },
        {
            "source":"n64",
            "target":"n171"
        },
        {
            "source":"n65",
            "target":"n66"
        },
        {
            "source":"n65",
            "target":"n171"
        },
        {
            "source":"n66",
            "target":"n171"
        },
        {
            "source":"n67",
            "target":"n68"
        },
        {
            "source":"n67",
            "target":"n70"
        },
        {
            "source":"n67",
            "target":"n171"
        },
        {
            "source":"n68",
            "target":"n69"
        },
        {
            "source":"n68",
            "target":"n171"
        },
        {
            "source":"n69",
            "target":"n171"
        },
        {
            "source":"n70",
            "target":"n71"
        },
        {
            "source":"n70",
            "target":"n171"
        },
        {
            "source":"n71",
            "target":"n72"
        },
        {
            "source":"n71",
            "target":"n74"
        },
        {
            "source":"n71",
            "target":"n171"
        },
        {
            "source":"n72",
            "target":"n73"
        },
        {
            "source":"n72",
            "target":"n171"
        },
        {
            "source":"n73",
            "target":"n171"
        },
        {
            "source":"n74",
            "target":"n75"
        },
        {
            "source":"n74",
            "target":"n77"
        },
        {
            "source":"n74",
            "target":"n171"
        },
        {
            "source":"n75",
            "target":"n76"
        },
        {
            "source":"n75",
            "target":"n171"
        },
        {
            "source":"n76",
            "target":"n171"
        },
        {
            "source":"n77",
            "target":"n78"
        },
        {
            "source":"n77",
            "target":"n171"
        },
        {
            "source":"n78",
            "target":"n79"
        },
        {
            "source":"n78",
            "target":"n171"
        },
        {
            "source":"n79",
            "target":"n80"
        },
        {
            "source":"n79",
            "target":"n84"
        },
        {
            "source":"n79",
            "target":"n171"
        },
        {
            "source":"n80",
            "target":"n81"
        },
        {
            "source":"n80",
            "target":"n83"
        },
        {
            "source":"n80",
            "target":"n171"
        },
        {
            "source":"n81",
            "target":"n82"
        },
        {
            "source":"n81",
            "target":"n171"
        },
        {
            "source":"n82",
            "target":"n171"
        },
        {
            "source":"n83",
            "target":"n84"
        },
        {
            "source":"n83",
            "target":"n171"
        },
        {
            "source":"n84",
            "target":"n85"
        },
        {
            "source":"n84",
            "target":"n171"
        },
        {
            "source":"n85",
            "target":"n86"
        },
        {
            "source":"n85",
            "target":"n171"
        },
        {
            "source":"n86",
            "target":"n87"
        },
        {
            "source":"n86",
            "target":"n171"
        },
        {
            "source":"n87",
            "target":"n88"
        },
        {
            "source":"n87",
            "target":"n171"
        },
        {
            "source":"n88",
            "target":"n89"
        },
        {
            "source":"n89",
            "target":"n90"
        },
        {
            "source":"n89",
            "target":"n171"
        },
        {
            "source":"n90",
            "target":"n91"
        },
        {
            "source":"n90",
            "target":"n171"
        },
        {
            "source":"n91",
            "target":"n92"
        },
        {
            "source":"n91",
            "target":"n171"
        },
        {
            "source":"n92",
            "target":"n93"
        },
        {
            "source":"n92",
            "target":"n171"
        },
        {
            "source":"n93",
            "target":"n94"
        },
        {
            "source":"n93",
            "target":"n171"
        },
        {
            "source":"n94",
            "target":"n95"
        },
        {
            "source":"n94",
            "target":"n171"
        },
        {
            "source":"n95",
            "target":"n96"
        },
        {
            "source":"n95",
            "target":"n171"
        },
        {
            "source":"n96",
            "target":"n97"
        },
        {
            "source":"n96",
            "target":"n171"
        },
        {
            "source":"n97",
            "target":"n98"
        },
        {
            "source":"n97",
            "target":"n171"
        },
        {
            "source":"n98",
            "target":"n99"
        },
        {
            "source":"n98",
            "target":"n171"
        },
        {
            "source":"n99",
            "target":"n100"
        },
        {
            "source":"n99",
            "target":"n171"
        },
        {
            "source":"n100",
            "target":"n101"
        },
        {
            "source":"n100",
            "target":"n171"
        },
        {
            "source":"n101",
            "target":"n102"
        },
        {
            "source":"n101",
            "target":"n171"
        },
        {
            "source":"n102",
            "target":"n103"
        },
        {
            "source":"n102",
            "target":"n171"
        },
        {
            "source":"n103",
            "target":"n104"
        },
        {
            "source":"n103",
            "target":"n171"
        },
        {
            "source":"n104",
            "target":"n105"
        },
        {
            "source":"n104",
            "target":"n171"
        },
        {
            "source":"n105",
            "target":"n106"
        },
        {
            "source":"n105",
            "target":"n171"
        },
        {
            "source":"n106",
            "target":"n107"
        },
        {
            "source":"n106",
            "target":"n171"
        },
        {
            "source":"n107",
            "target":"n108"
        },
        {
            "source":"n107",
            "target":"n171"
        },
        {
            "source":"n108",
            "target":"n109"
        },
        {
            "source":"n109",
            "target":"n110"
        },
        {
            "source":"n109",
            "target":"n171"
        },
        {
            "source":"n110",
            "target":"n111"
        },
        {
            "source":"n110",
            "target":"n171"
        },
        {
            "source":"n111",
            "target":"n112"
        },
        {
            "source":"n111",
            "target":"n171"
        },
        {
            "source":"n112",
            "target":"n113"
        },
        {
            "source":"n112",
            "target":"n171"
        },
        {
            "source":"n113",
            "target":"n114"
        },
        {
            "source":"n113",
            "target":"n171"
        },
        {
            "source":"n114",
            "target":"n115"
        },
        {
            "source":"n114",
            "target":"n171"
        },
        {
            "source":"n115",
            "target":"n116"
        },
        {
            "source":"n115",
            "target":"n171"
        },
        {
            "source":"n116",
            "target":"n117"
        },
        {
            "source":"n116",
            "target":"n171"
        },
        {
            "source":"n117",
            "target":"n118"
        },
        {
            "source":"n117",
            "target":"n171"
        },
        {
            "source":"n118",
            "target":"n119"
        },
        {
            "source":"n118",
            "target":"n171"
        },
        {
            "source":"n119",
            "target":"n120"
        },
        {
            "source":"n119",
            "target":"n171"
        },
        {
            "source":"n120",
            "target":"n121"
        },
        {
            "source":"n120",
            "target":"n171"
        },
        {
            "source":"n121",
            "target":"n122"
        },
        {
            "source":"n121",
            "target":"n171"
        },
        {
            "source":"n122",
            "target":"n123"
        },
        {
            "source":"n122",
            "target":"n171"
        },
        {
            "source":"n123",
            "target":"n124"
        },
        {
            "source":"n123",
            "target":"n171"
        },
        {
            "source":"n124",
            "target":"n125"
        },
        {
            "source":"n125",
            "target":"n126"
        },
        {
            "source":"n125",
            "target":"n171"
        },
        {
            "source":"n126",
            "target":"n127"
        },
        {
            "source":"n126",
            "target":"n171"
        },
        {
            "source":"n127",
            "target":"n128"
        },
        {
            "source":"n127",
            "target":"n171"
        },
        {
            "source":"n128",
            "target":"n129"
        },
        {
            "source":"n128",
            "target":"n171"
        },
        {
            "source":"n129",
            "target":"n130"
        },
        {
            "source":"n129",
            "target":"n171"
        },
        {
            "source":"n130",
            "target":"n131"
        },
        {
            "source":"n130",
            "target":"n171"
        },
        {
            "source":"n131",
            "target":"n132"
        },
        {
            "source":"n131",
            "target":"n171"
        },
        {
            "source":"n132",
            "target":"n133"
        },
        {
            "source":"n132",
            "target":"n171"
        },
        {
            "source":"n133",
            "target":"n134"
        },
        {
            "source":"n133",
            "target":"n171"
        },
        {
            "source":"n134",
            "target":"n135"
        },
        {
            "source":"n134",
            "target":"n171"
        },
        {
            "source":"n135",
            "target":"n136"
        },
        {
            "source":"n135",
            "target":"n171"
        },
        {
            "source":"n136",
            "target":"n137"
        },
        {
            "source":"n136",
            "target":"n171"
        },
        {
            "source":"n137",
            "target":"n138"
        },
        {
            "source":"n137",
            "target":"n171"
        },
        {
            "source":"n138",
            "target":"n139"
        },
        {
            "source":"n138",
            "target":"n171"
        },
        {
            "source":"n139",
            "target":"n140"
        },
        {
            "source":"n139",
            "target":"n171"
        },
        {
            "source":"n140",
            "target":"n141"
        },
        {
            "source":"n140",
            "target":"n171"
        },
        {
            "source":"n141",
            "target":"n142"
        },
        {
            "source":"n141",
            "target":"n171"
        },
        {
            "source":"n142",
            "target":"n143"
        },
        {
            "source":"n142",
            "target":"n171"
        },
        {
            "source":"n143",
            "target":"n144"
        },
        {
            "source":"n143",
            "target":"n171"
        },
        {
            "source":"n144",
            "target":"n145"
        },
        {
            "source":"n144",
            "target":"n171"
        },
        {
            "source":"n145",
            "target":"n146"
        },
        {
            "source":"n145",
            "target":"n171"
        },
        {
            "source":"n146",
            "target":"n147"
        },
        {
            "source":"n146",
            "target":"n171"
        },
        {
            "source":"n147",
            "target":"n148"
        },
        {
            "source":"n147",
            "target":"n171"
        },
        {
            "source":"n148",
            "target":"n149"
        },
        {
            "source":"n148",
            "target":"n171"
        },
        {
            "source":"n149",
            "target":"n150"
        },
        {
            "source":"n149",
            "target":"n171"
        },
        {
            "source":"n150",
            "target":"n151"
        },
        {
            "source":"n150",
            "target":"n171"
        },
        {
            "source":"n151",
            "target":"n152"
        },
        {
            "source":"n152",
            "target":"n153"
        },
        {
            "source":"n152",
            "target":"n165"
        },
        {
            "source":"n152",
            "target":"n171"
        },
        {
            "source":"n153",
            "target":"n154"
        },
        {
            "source":"n153",
            "target":"n171"
        },
        {
            "source":"n154",
            "target":"n155"
        },
        {
            "source":"n154",
            "target":"n171"
        },
        {
            "source":"n155",
            "target":"n156"
        },
        {
            "source":"n155",
            "target":"n171"
        },
        {
            "source":"n156",
            "target":"n157"
        },
        {
            "source":"n157",
            "target":"n158"
        },
        {
            "source":"n158",
            "target":"n159"
        },
        {
            "source":"n158",
            "target":"n171"
        },
        {
            "source":"n159",
            "target":"n160"
        },
        {
            "source":"n159",
            "target":"n171"
        },
        {
            "source":"n160",
            "target":"n161"
        },
        {
            "source":"n161",
            "target":"n162"
        },
        {
            "source":"n162",
            "target":"n163"
        },
        {
            "source":"n163",
            "target":"n164"
        },
        {
            "source":"n164",
            "target":"n171"
        },
        {
            "source":"n165",
            "target":"n166"
        },
        {
            "source":"n165",
            "target":"n171"
        },
        {
            "source":"n166",
            "target":"n167"
        },
        {
            "source":"n166",
            "target":"n171"
        },
        {
            "source":"n167",
            "target":"n168"
        },
        {
            "source":"n167",
            "target":"n171"
        },
        {
            "source":"n168",
            "target":"n169"
        },
        {
            "source":"n168",
            "target":"n171"
        },
        {
            "source":"n169",
            "target":"n170"
        },
        {
            "source":"n169",
            "target":"n171"
        },
        {
            "source":"n170",
            "target":"n156"
        },
        {
            "source":"n170",
            "target":"n171"
        }
    ]
}
